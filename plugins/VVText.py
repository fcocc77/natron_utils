# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# Natron PyPlug
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named VVTextExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from VVTextExt import *
except ImportError:
    pass

def getPluginID():
    return "vv.text"

def getLabel():
    return "VVText"

def getVersion():
    return 1

def getGrouping():
    return "videovina"

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group
    lastNode.setColor(0.7, 0.7, 0.7)
    param = lastNode.getParam("onParamChanged")
    if param is not None:
        param.setValue("vvtext.update_button")
        del param


    # Create the user parameters
    lastNode.controls = lastNode.createPageParam("controls", "Controls")
    param = lastNode.createSeparatorParam("title_param", "Title:")

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    lastNode.title_param = param
    del param

    param = lastNode.createStringParam("text_param", "Text")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.text_param = param
    del param

    param = lastNode.createStringParam("subtitle_param", "Subtitle")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.subtitle_param = param
    del param

    param = lastNode.createButtonParam("fit_param", "Fit to Box")

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.fit_param = param
    del param

    param = lastNode.createIntParam("font_size_param", "Font Size")
    param.setMinimum(1, 0)
    param.setMaximum(500, 0)
    param.setDisplayMinimum(1, 0)
    param.setDisplayMaximum(500, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 0)
    lastNode.font_size_param = param
    del param

    param = lastNode.createSeparatorParam("sep_dNeti", "")

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    lastNode.sep_dNeti = param
    del param

    param = lastNode.createChoiceParam("direction_param", "Direction")
    entries = [ ("Left to Right", "Left to Right"),
    ("Right to Left", "Right to Left")]
    param.setOptions(entries)
    del entries

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.direction_param = param
    del param

    param = lastNode.createSeparatorParam("sep_HTcpl", "")

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    lastNode.sep_HTcpl = param
    del param

    param = lastNode.createDoubleParam("delay_param", "Delay")
    param.setMinimum(0, 0)
    param.setMaximum(100, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.delay_param = param
    del param

    param = lastNode.createSeparatorParam("sep_bSX35", "")

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    lastNode.sep_bSX35 = param
    del param

    param = lastNode.createDoubleParam("scale_param", "Scale")
    param.setMinimum(1, 0)
    param.setMaximum(100, 0)
    param.setDisplayMinimum(1, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    lastNode.scale_param = param
    del param

    param = lastNode.createIntParam("position_y_param", "Position Y")
    param.setMinimum(0, 0)
    param.setMaximum(1920, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1920, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.position_y_param = param
    del param

    param = lastNode.createIntParam("position_x_param", "Position X")
    param.setMinimum(0, 0)
    param.setMaximum(1080, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1080, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.position_x_param = param
    del param

    param = lastNode.createDoubleParam("rotate_param", "Rotate")
    param.setMinimum(0, 0)
    param.setMaximum(360, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(360, 0)

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.rotate_param = param
    del param

    param = lastNode.createDoubleParam("opacity_param", "Opacity")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    lastNode.opacity_param = param
    del param

    param = lastNode.createSeparatorParam("sep_kZTaw", "")

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    lastNode.sep_kZTaw = param
    del param

    param = lastNode.createDoubleParam("blur_x_param", "Blur X")
    param.setMinimum(0, 0)
    param.setMaximum(100, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.blur_x_param = param
    del param

    param = lastNode.createDoubleParam("blur_y_param", "Blur Y")
    param.setMinimum(0, 0)
    param.setMaximum(100, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(70.8, 0)
    lastNode.blur_y_param = param
    del param

    param = lastNode.createSeparatorParam("sep_8deVl", "")

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    lastNode.sep_8deVl = param
    del param

    param = lastNode.createButtonParam("update_param", "Update")

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    lastNode.update_param = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output1")
    lastNode.setPosition(-215, 198)
    lastNode.setSize(104, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Start of node "Constant1"
    lastNode = app.createNode("net.sf.openfx.ConstantPlugin", 1, group)
    lastNode.setScriptName("Constant1")
    lastNode.setLabel("Constant1")
    lastNode.setPosition(-25, -107)
    lastNode.setSize(104, 33)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupConstant1 = lastNode

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("color")
    if param is not None:
        param.setValue(0.3324515819549561, 0)
        param.setValue(0.3613067865371704, 1)
        param.setValue(0.01680737361311913, 2)
        del param

    del lastNode
    # End of node "Constant1"

    # Start of node "Transform"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Transform")
    lastNode.setLabel("Transform")
    lastNode.setPosition(-224, -108)
    lastNode.setSize(104, 33)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupTransform = lastNode

    del lastNode
    # End of node "Transform"

    # Start of node "Transform2"
    lastNode = app.createNode("net.sf.openfx.TransformPlugin", 1, group)
    lastNode.setScriptName("Transform2")
    lastNode.setLabel("Transform2")
    lastNode.setPosition(-25, 95)
    lastNode.setSize(104, 33)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupTransform2 = lastNode

    param = lastNode.getParam("translate")
    if param is not None:
        param.setValue(9, 0)
        param.setValue(-18, 1)
        del param

    param = lastNode.getParam("rotate")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("scale")
    if param is not None:
        param.setValue(1, 0)
        param.setValue(1, 1)
        del param

    param = lastNode.getParam("center")
    if param is not None:
        param.setValue(960, 0)
        param.setValue(540, 1)
        del param

    param = lastNode.getParam("transformCenterChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Transform2"

    # Now that all nodes are created we can connect them together, restore expressions
    groupOutput1.connectInput(0, groupTransform2)
    groupTransform2.connectInput(0, groupConstant1)

    param = groupTransform2.getParam("translate")
    param.setExpression("transform = thisGroup.getInput(0)\n\nvalue = 0\nif transform:\n\tvalue = transform.getParam(\'translate\').getValue(0)\n\nret = value", True, 0)
    param.setExpression("transform = thisGroup.getInput(0)\n\nvalue = 0\nif transform:\n\tvalue = transform.getParam(\'translate\').getValue(1)\n\nret = value", True, 1)
    del param
    param = groupTransform2.getParam("rotate")
    param.setExpression("transform = thisGroup.getInput(0)\n\nvalue = 0\nif transform:\n\tvalue = transform.getParam(\'rotate\').getValue()\n\nret = value", True, 0)
    del param
    param = groupTransform2.getParam("scale")
    param.setExpression("transform = thisGroup.getInput(0)\n\nvalue = 0\nif transform:\n\tvalue = transform.getParam(\'scale\').getValue(0)\n\nret = value", True, 0)
    param.setExpression("transform = thisGroup.getInput(0)\n\nvalue = 0\nif transform:\n\tvalue = transform.getParam(\'scale\').getValue(0)\n\nret = value", True, 1)
    del param
    param = groupTransform2.getParam("center")
    param.setExpression("transform = thisGroup.getInput(0)\n\nvalue = 0\nif transform:\n\tvalue = transform.getParam(\'center\').getValue(0)\n\nret = value", True, 0)
    param.setExpression("transform = thisGroup.getInput(0)\n\nvalue = 0\nif transform:\n\tvalue = transform.getParam(\'center\').getValue(1)\n\nret = value", True, 1)
    del param

    try:
        extModule = sys.modules["VVTextExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
