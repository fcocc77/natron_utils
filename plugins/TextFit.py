# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# Natron PyPlug
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named TextFitExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from TextFitExt import *
except ImportError:
    pass

def getPluginID():
    return "vv.TextFit"

def getLabel():
    return "TextFit"

def getVersion():
    return 1

def getIconPath():
    return "Text.png"

def getGrouping():
    return "videovina/Texts"

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group
    lastNode.setColor(0.7, 0.7, 0.7)
    param = lastNode.getParam("onParamChanged")
    if param is not None:
        param.setValue("text_fit.main")
        del param


    # Create the user parameters
    lastNode.control = lastNode.createPageParam("control", "Control")
    param = lastNode.createStringParam("state_label", "State")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)
    param.setDefaultValue("- - - - - - - >    STATE :")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.state_label = param
    del param

    param = lastNode.createChoiceParam("format", "Format")
    entries = [ ("Quarter HD - 480 x 270", ""),
    ("Half HD - 960 x 540", ""),
    ("Full HD - 1920 x 1080", ""),
    ("4K - 3840 x 2160", "")]
    param.setOptions(entries)
    del entries
    param.setDefaultValue("Full HD - 1920 x 1080")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.format = param
    del param

    param = lastNode.createButtonParam("link", "Link To Parent")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setEvaluateOnChange(False)
    lastNode.link = param
    del param

    param = lastNode.createButtonParam("refresh", "Refresh")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setEvaluateOnChange(False)
    lastNode.refresh = param
    del param

    param = lastNode.createSeparatorParam("sep5", "")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep5 = param
    del param

    param = lastNode.createStringParam("texts_label", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)
    param.setDefaultValue("- - - - - - - >    TEXT :")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.texts_label = param
    del param

    param = lastNode.createStringParam("title", "Title")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("Title")
    lastNode.title = param
    del param

    param = lastNode.createStringParam("subtitle", "Subtitle")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("Subtitle")
    lastNode.subtitle = param
    del param

    param = lastNode.createFileParam("font", "Font")
    param.setSequenceEnabled(False)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.font = param
    del param

    param = lastNode.createSeparatorParam("sep7", "")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep7 = param
    del param

    param = lastNode.createStringParam("settings_label", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)
    param.setDefaultValue("- - - - - - - >    SETTINGS :")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.settings_label = param
    del param

    param = lastNode.createIntParam("font_size_title", "Title Font Size")
    param.setMinimum(0, 0)
    param.setMaximum(2000, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1000, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.font_size_title = param
    del param

    param = lastNode.createInt2DParam("title_position", "Title Position")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.title_position = param
    del param

    param = lastNode.createIntParam("title_max_size", "Title Max Size %")
    param.setMinimum(0, 0)
    param.setMaximum(100, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 0)
    lastNode.title_max_size = param
    del param

    param = lastNode.createSeparatorParam("sep9", "")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep9 = param
    del param

    param = lastNode.createIntParam("font_size_subtitle", "Subtitle Font Size")
    param.setMinimum(0, 0)
    param.setMaximum(2000, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1000, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.font_size_subtitle = param
    del param

    param = lastNode.createInt2DParam("subtitle_position", "Subtitle Position")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.subtitle_position = param
    del param

    param = lastNode.createIntParam("subtitle_max_size", "Subtitle Max Size %")
    param.setMinimum(0, 0)
    param.setMaximum(100, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 0)
    lastNode.subtitle_max_size = param
    del param

    param = lastNode.createSeparatorParam("sep4", "")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep4 = param
    del param

    param = lastNode.createChoiceParam("align", "Text Align")
    entries = [ ("Right", ""),
    ("Left", ""),
    ("Center", "")]
    param.setOptions(entries)
    del entries
    param.setDefaultValue("Center")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.align = param
    del param

    param = lastNode.createButtonParam("separate_text", "Separate Text")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setEvaluateOnChange(False)
    lastNode.separate_text = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['control', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output")
    lastNode.setPosition(1325, 520)
    lastNode.setSize(100, 29)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Start of node "Full_HD_Transform"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Full_HD_Transform")
    lastNode.setLabel("Full HD Transform")
    lastNode.setPosition(1645, 111)
    lastNode.setSize(100, 29)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupFull_HD_Transform = lastNode

    del lastNode
    # End of node "Full_HD_Transform"

    # Start of node "title_node"
    lastNode = app.createNode("net.fxarena.openfx.Text", 6, group)
    lastNode.setScriptName("title_node")
    lastNode.setLabel("title_node")
    lastNode.setPosition(1172, -124)
    lastNode.setSize(100, 32)
    lastNode.setColor(0.3, 0.5, 0.2)
    grouptitle_node = lastNode

    param = lastNode.getParam("center")
    if param is not None:
        param.setValue(1041, 0)
        param.setValue(161, 1)
        del param

    param = lastNode.getParam("interactive")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("autoSize")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("centerInteract")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("markup")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("text")
    if param is not None:
        param.setValue("Title")
        del param

    param = lastNode.getParam("name")
    if param is not None:
        param.set("A/AR PL UMing CN")
        del param

    param = lastNode.getParam("font")
    if param is not None:
        param.setValue("AR PL UMing CN")
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("arcRadius")
    if param is not None:
        param.setValue(0, 0)
        del param

    del lastNode
    # End of node "title_node"

    # Start of node "subtitle_node"
    lastNode = app.createNode("net.fxarena.openfx.Text", 6, group)
    lastNode.setScriptName("subtitle_node")
    lastNode.setLabel("subtitle_node")
    lastNode.setPosition(1448, -119)
    lastNode.setSize(100, 32)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupsubtitle_node = lastNode

    param = lastNode.getParam("center")
    if param is not None:
        param.setValue(582, 0)
        param.setValue(187, 1)
        del param

    param = lastNode.getParam("autoSize")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("text")
    if param is not None:
        param.setValue("Subtitle")
        del param

    param = lastNode.getParam("name")
    if param is not None:
        param.set("A/AR PL UMing CN")
        del param

    param = lastNode.getParam("font")
    if param is not None:
        param.setValue("AR PL UMing CN")
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "subtitle_node"

    # Start of node "Merge3"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge3")
    lastNode.setLabel("Merge3")
    lastNode.setPosition(1325, 40)
    lastNode.setSize(100, 45)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge3 = lastNode

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge3"

    # Start of node "title_position_node"
    lastNode = app.createNode("net.sf.openfx.Position", 1, group)
    lastNode.setScriptName("title_position_node")
    lastNode.setLabel("title_position_node")
    lastNode.setPosition(1172, -49)
    lastNode.setSize(100, 55)
    lastNode.setColor(0.7, 0.3, 0.1)
    grouptitle_position_node = lastNode

    param = lastNode.getParam("translate")
    if param is not None:
        param.setValue(310, 0)
        param.setValue(519, 1)
        del param

    del lastNode
    # End of node "title_position_node"

    # Start of node "subtitle_position_node"
    lastNode = app.createNode("net.sf.openfx.Position", 1, group)
    lastNode.setScriptName("subtitle_position_node")
    lastNode.setLabel("subtitle_position_node")
    lastNode.setPosition(1448, -47)
    lastNode.setSize(100, 55)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupsubtitle_position_node = lastNode

    param = lastNode.getParam("translate")
    if param is not None:
        param.setValue(16, 1)
        del param

    del lastNode
    # End of node "subtitle_position_node"

    # Start of node "General_Transform"
    lastNode = app.createNode("net.sf.openfx.TransformPlugin", 1, group)
    lastNode.setScriptName("General_Transform")
    lastNode.setLabel("General_Transform")
    lastNode.setPosition(1325, 187)
    lastNode.setSize(100, 55)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupGeneral_Transform = lastNode

    param = lastNode.getParam("scale")
    if param is not None:
        param.setValue(0.5100153006885364, 0)
        param.setValue(0.5100153006885364, 1)
        del param

    param = lastNode.getParam("transformCenterChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "General_Transform"

    # Start of node "Merge1"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge1")
    lastNode.setLabel("Merge1")
    lastNode.setPosition(1325, 360)
    lastNode.setSize(100, 45)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge1 = lastNode

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge1"

    # Start of node "reformat"
    lastNode = app.createNode("net.sf.openfx.Reformat", 1, group)
    lastNode.setScriptName("reformat")
    lastNode.setLabel("reformat")
    lastNode.setPosition(1587, 366)
    lastNode.setSize(104, 32)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupreformat = lastNode

    param = lastNode.getParam("reformatType")
    if param is not None:
        param.set("box")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("boxSize")
    if param is not None:
        param.setValue(1920, 0)
        param.setValue(1080, 1)
        del param

    param = lastNode.getParam("boxFixed")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "reformat"

    # Now that all nodes are created we can connect them together, restore expressions
    groupOutput1.connectInput(0, groupMerge1)
    groupMerge3.connectInput(0, groupsubtitle_position_node)
    groupMerge3.connectInput(1, grouptitle_position_node)
    grouptitle_position_node.connectInput(0, grouptitle_node)
    groupsubtitle_position_node.connectInput(0, groupsubtitle_node)
    groupGeneral_Transform.connectInput(0, groupMerge3)
    groupMerge1.connectInput(0, groupreformat)
    groupMerge1.connectInput(1, groupGeneral_Transform)

    param = grouptitle_node.getParam("text")
    param.setExpression("thisGroup.title.get()", False, 0)
    del param
    param = groupsubtitle_node.getParam("text")
    param.setExpression("thisGroup.subtitle.get()", False, 0)
    del param

    try:
        extModule = sys.modules["TextFitExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
