# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# Natron PyPlug
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named LetterAnimationExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from LetterAnimationExt import *
except ImportError:
    pass

def getPluginID():
    return "vv.LetterAnimation"

def getLabel():
    return "LetterAnimation"

def getVersion():
    return 1

def getIconPath():
    return "Text.png"

def getGrouping():
    return "videovina/Texts"

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group
    lastNode.setColor(0.7, 0.7, 0.7)
    param = lastNode.getParam("onParamChanged")
    if param is not None:
        param.setValue("letter_animation.main")
        del param


    # Create the user parameters
    lastNode.control = lastNode.createPageParam("control", "Control")
    param = lastNode.createStringParam("state_label", "State")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)
    param.setDefaultValue("- - - - - - - >    STATE :")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.state_label = param
    del param

    param = lastNode.createChoiceParam("format", "Format")
    entries = [ ("Quarter HD - 480 x 270", ""),
    ("Half HD - 960 x 540", ""),
    ("Full HD - 1920 x 1080", ""),
    ("4K - 3840 x 2160", "")]
    param.setOptions(entries)
    del entries
    param.setDefaultValue("Full HD - 1920 x 1080")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.format = param
    del param

    param = lastNode.createChoiceParam("speed", "Speed")
    entries = [ ("Slow", ""),
    ("Normal", ""),
    ("Fast", "")]
    param.setOptions(entries)
    del entries
    param.setDefaultValue("Normal")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.speed = param
    del param

    param = lastNode.createButtonParam("link", "Link To Parent")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setEvaluateOnChange(False)
    lastNode.link = param
    del param

    param = lastNode.createButtonParam("refresh", "Refresh")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setEvaluateOnChange(False)
    lastNode.refresh = param
    del param

    param = lastNode.createSeparatorParam("sep5", "")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep5 = param
    del param

    param = lastNode.createStringParam("time_label", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)
    param.setDefaultValue("- - - - - - - >    TIME :")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.time_label = param
    del param

    param = lastNode.createIntParam("duration_percent", "Duration Percent %")
    param.setMinimum(0, 0)
    param.setMaximum(100, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 0)
    lastNode.duration_percent = param
    del param

    param = lastNode.createInt3DParam("durations", "Durations")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)
    param.setDisplayMinimum(0, 2)
    param.setDisplayMaximum(100, 2)
    param.setDefaultValue(0, 2)
    param.restoreDefaultValue(2)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    param.setValue(150, 0)
    param.setValue(100, 1)
    param.setValue(50, 2)
    lastNode.durations = param
    del param

    param = lastNode.createDoubleParam("transition", "Transition %")
    param.setMinimum(0, 0)
    param.setMaximum(100, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("Es la duracion en que la palabra se armara,\neste es el porcentaje de la duracion de arriba.")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(50, 0)
    lastNode.transition = param
    del param

    param = lastNode.createSeparatorParam("sep6", "")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep6 = param
    del param

    param = lastNode.createStringParam("texts_label", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)
    param.setDefaultValue("- - - - - - - >    TEXT :")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.texts_label = param
    del param

    param = lastNode.createStringParam("title", "Title")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("Title")
    lastNode.title = param
    del param

    param = lastNode.createStringParam("subtitle", "Subtitle")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("Subtitle")
    lastNode.subtitle = param
    del param

    param = lastNode.createFileParam("font", "Font")
    param.setSequenceEnabled(False)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.font = param
    del param

    param = lastNode.createColorParam("color", "Title Color", False)
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(1, 1)
    param.setMinimum(-2147483648, 2)
    param.setMaximum(2147483647, 2)
    param.setDisplayMinimum(0, 2)
    param.setDisplayMaximum(1, 2)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(1, 1)
    param.setValue(1, 2)
    lastNode.color = param
    del param

    param = lastNode.createColorParam("color_subtitle", "Subtitle Color", False)
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(1, 1)
    param.setMinimum(-2147483648, 2)
    param.setMaximum(2147483647, 2)
    param.setDisplayMinimum(0, 2)
    param.setDisplayMaximum(1, 2)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    param.setValue(1, 1)
    param.setValue(1, 2)
    lastNode.color_subtitle = param
    del param

    param = lastNode.createBooleanParam("separated_by_letter", "Separated by Letter")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(True)
    lastNode.separated_by_letter = param
    del param

    param = lastNode.createButtonParam("text_generator", "Text Generator")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setEvaluateOnChange(False)
    lastNode.text_generator = param
    del param

    param = lastNode.createButtonParam("clear_text", "Clear")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setEvaluateOnChange(False)
    lastNode.clear_text = param
    del param

    param = lastNode.createSeparatorParam("sep7", "")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep7 = param
    del param

    param = lastNode.createStringParam("settings_label", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)
    param.setDefaultValue("- - - - - - - >    SETTINGS :")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.settings_label = param
    del param

    param = lastNode.createDoubleParam("word_gap", "Word Gap %")
    param.setMinimum(0, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(30, 0)
    lastNode.word_gap = param
    del param

    param = lastNode.createDoubleParam("letter_gap", "Letter Gap %")
    param.setMinimum(0, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    param.setValue(30, 0)
    lastNode.letter_gap = param
    del param

    param = lastNode.createDoubleParam("displacement", "Displacement")
    param.setMinimum(0, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(2000, 0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(500, 0)
    lastNode.displacement = param
    del param

    param = lastNode.createDoubleParam("displacement_angle", "Angle")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(-180, 0)
    param.setDisplayMaximum(180, 0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.displacement_angle = param
    del param

    param = lastNode.createSeparatorParam("sep8", "")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep8 = param
    del param

    param = lastNode.createDoubleParam("scale", "Scale")
    param.setMinimum(0, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1.5, 0)
    lastNode.scale = param
    del param

    param = lastNode.createDoubleParam("rotate", "Rotate")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(360, 0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.rotate = param
    del param

    param = lastNode.createDoubleParam("opacity", "Opacity")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.opacity = param
    del param

    param = lastNode.createSeparatorParam("sep9", "")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep9 = param
    del param

    param = lastNode.createDoubleParam("blur_x", "Blur X")
    param.setMinimum(0, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(100, 0)
    lastNode.blur_x = param
    del param

    param = lastNode.createDoubleParam("blur_y", "Blur Y")
    param.setMinimum(0, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.blur_y = param
    del param

    param = lastNode.createSeparatorParam("sep10", "")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep10 = param
    del param

    param = lastNode.createBooleanParam("input_transition", "Input Transition")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(True)
    lastNode.input_transition = param
    del param

    param = lastNode.createBooleanParam("output_transition", "Output Transition")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.output_transition = param
    del param

    param = lastNode.createChoiceParam("word_gap_word", "Word Gap")
    entries = [ ("Title", ""),
    ("Subtitle", "")]
    param.setOptions(entries)
    del entries

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("Es la palabra que se va a desfasar.")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.set("Subtitle")
    lastNode.word_gap_word = param
    del param

    param = lastNode.createChoiceParam("letter_gap_direction", "Letter Gap Direction")
    entries = [ ("Left to Right", ""),
    ("Right to Left", "")]
    param.setOptions(entries)
    del entries

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.letter_gap_direction = param
    del param

    param = lastNode.createButtonParam("texts_refresh", "Texts Refresh")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setEvaluateOnChange(False)
    lastNode.texts_refresh = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['control', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output")
    lastNode.setPosition(-126, 1542)
    lastNode.setSize(100, 29)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Start of node "Full_HD_Transform"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Full_HD_Transform")
    lastNode.setLabel("Full HD Transform")
    lastNode.setPosition(-723, 845)
    lastNode.setSize(100, 29)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupFull_HD_Transform = lastNode

    del lastNode
    # End of node "Full_HD_Transform"

    # Start of node "letter_transform_title"
    lastNode = app.createNode("net.sf.openfx.TransformPlugin", 1, group)
    lastNode.setScriptName("letter_transform_title")
    lastNode.setLabel("letter_transform_title")
    lastNode.setPosition(470, 501)
    lastNode.setSize(100, 29)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupletter_transform_title = lastNode

    param = lastNode.getParam("translate")
    if param is not None:
        param.setValue(989, 0)
        param.setValue(659.7, 1)
        del param

    param = lastNode.getParam("center")
    if param is not None:
        param.setValue(291, 0)
        param.setValue(60.30000000000001, 1)
        del param

    param = lastNode.getParam("transformCenterChanged")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("interactive")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("filter")
    if param is not None:
        param.set("bilinear")
        del param

    param = lastNode.getParam("shutter")
    if param is not None:
        param.setValue(0, 0)
        del param

    del lastNode
    # End of node "letter_transform_title"

    # Start of node "letter_transform_subtitle"
    lastNode = app.createNode("net.sf.openfx.TransformPlugin", 1, group)
    lastNode.setScriptName("letter_transform_subtitle")
    lastNode.setLabel("letter_transform_subtitle")
    lastNode.setPosition(172, 287)
    lastNode.setSize(100, 45)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupletter_transform_subtitle = lastNode

    param = lastNode.getParam("translate")
    if param is not None:
        param.setValue(896, 0)
        param.setValue(508.8, 1)
        del param

    param = lastNode.getParam("center")
    if param is not None:
        param.setValue(384, 0)
        param.setValue(211.2, 1)
        del param

    param = lastNode.getParam("transformCenterChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "letter_transform_subtitle"

    # Start of node "Merge2"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge2")
    lastNode.setLabel("Merge2")
    lastNode.setPosition(172, 493)
    lastNode.setSize(100, 45)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge2 = lastNode

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge2"

    # Start of node "general_transform"
    lastNode = app.createNode("net.sf.openfx.TransformPlugin", 1, group)
    lastNode.setScriptName("general_transform")
    lastNode.setLabel("general_transform")
    lastNode.setPosition(-222, 728)
    lastNode.setSize(100, 29)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupgeneral_transform = lastNode

    param = lastNode.getParam("scale")
    if param is not None:
        param.setValue(0.3, 0)
        param.setValue(0.3, 1)
        del param

    param = lastNode.getParam("transformCenterChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "general_transform"

    # Start of node "reformat"
    lastNode = app.createNode("net.sf.openfx.Reformat", 1, group)
    lastNode.setScriptName("reformat")
    lastNode.setLabel("reformat")
    lastNode.setPosition(-53, 922)
    lastNode.setSize(100, 32)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupreformat = lastNode

    param = lastNode.getParam("reformatType")
    if param is not None:
        param.set("box")
        del param

    param = lastNode.getParam("NatronParamFormatSize")
    if param is not None:
        param.setValue(2560, 0)
        param.setValue(1440, 1)
        del param

    param = lastNode.getParam("boxSize")
    if param is not None:
        param.setValue(1920, 0)
        param.setValue(1080, 1)
        del param

    param = lastNode.getParam("boxFixed")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "reformat"

    # Start of node "Merge4"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge4")
    lastNode.setLabel("Merge4")
    lastNode.setPosition(172, 916)
    lastNode.setSize(100, 45)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge4 = lastNode

    param = lastNode.getParam("userTextArea")
    if param is not None:
        param.setValue("<Natron>(over)</Natron>")
        del param

    del lastNode
    # End of node "Merge4"

    # Start of node "FrameRange"
    lastNode = app.createNode("net.sf.openfx.FrameRange", 1, group)
    lastNode.setScriptName("FrameRange")
    lastNode.setLabel("FrameRange")
    lastNode.setPosition(172, 1066)
    lastNode.setSize(100, 55)
    lastNode.setColor(0.7, 0.65, 0.35)
    groupFrameRange = lastNode

    param = lastNode.getParam("frameRange")
    if param is not None:
        param.setValue(101, 1)
        del param

    del lastNode
    # End of node "FrameRange"

    # Start of node "time_reverse"
    lastNode = app.createNode("net.sf.openfx.Retime", 1, group)
    lastNode.setScriptName("time_reverse")
    lastNode.setLabel("time_reverse")
    lastNode.setPosition(501, 1079)
    lastNode.setSize(100, 32)
    lastNode.setColor(0.7, 0.65, 0.35)
    grouptime_reverse = lastNode

    param = lastNode.getParam("reverseInput")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("warp")
    if param is not None:
        param.setCurveColor(0, 0.5, 0.5, 1)
        param.deleteAllControlPoints(0)
        param.addControlPoint(0, 0, 0, 1, 1, NatronEngine.Natron.KeyframeTypeEnum.eKeyframeTypeCubic)
        param.addControlPoint(0, 1, 1, 1, 1, NatronEngine.Natron.KeyframeTypeEnum.eKeyframeTypeCubic)
        del param

    param = lastNode.getParam("filter")
    if param is not None:
        param.set("none")
        del param

    del lastNode
    # End of node "time_reverse"

    # Start of node "switch_time_reverse"
    lastNode = app.createNode("net.sf.openfx.switchPlugin", 1, group)
    lastNode.setScriptName("switch_time_reverse")
    lastNode.setLabel("switch_time_reverse")
    lastNode.setPosition(172, 1215)
    lastNode.setSize(100, 29)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupswitch_time_reverse = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValueAtTime(0, 51, 0)
        param.setValueAtTime(1, 52, 0)
        del param

    del lastNode
    # End of node "switch_time_reverse"

    # Start of node "crop_time_reverse"
    lastNode = app.createNode("net.sf.openfx.CropPlugin", 1, group)
    lastNode.setScriptName("crop_time_reverse")
    lastNode.setLabel("crop_time_reverse")
    lastNode.setPosition(501, 1215)
    lastNode.setSize(100, 29)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupcrop_time_reverse = lastNode

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("NatronParamFormatSize")
    if param is not None:
        param.setValue(1920, 0)
        param.setValue(1080, 1)
        del param

    param = lastNode.getParam("bottomLeft")
    if param is not None:
        param.setValueAtTime(898, 51, 0)
        param.setValueAtTime(898, 52, 0)
        param.setValueAtTime(898, 53, 0)
        param.setValueAtTime(898, 54, 0)
        param.setValueAtTime(898, 55, 0)
        param.setValueAtTime(898, 56, 0)
        param.setValueAtTime(898, 57, 0)
        param.setValueAtTime(898, 58, 0)
        param.setValueAtTime(898, 59, 0)
        param.setValueAtTime(898, 60, 0)
        param.setValueAtTime(898, 61, 0)
        param.setValueAtTime(898, 62, 0)
        param.setValueAtTime(898, 63, 0)
        param.setValueAtTime(898, 64, 0)
        param.setValueAtTime(898, 65, 0)
        param.setValueAtTime(898, 66, 0)
        param.setValueAtTime(898, 67, 0)
        param.setValueAtTime(898, 68, 0)
        param.setValueAtTime(898, 69, 0)
        param.setValueAtTime(898, 70, 0)
        param.setValueAtTime(898, 71, 0)
        param.setValueAtTime(898, 72, 0)
        param.setValueAtTime(898, 73, 0)
        param.setValueAtTime(898, 74, 0)
        param.setValueAtTime(898, 75, 0)
        param.setValueAtTime(898, 76, 0)
        param.setValueAtTime(898, 77, 0)
        param.setValueAtTime(898, 78, 0)
        param.setValueAtTime(898, 79, 0)
        param.setValueAtTime(897.0375022032714, 80, 0)
        param.setValueAtTime(929.9207180336132, 81, 0)
        param.setValueAtTime(987.4839358758909, 82, 0)
        param.setValueAtTime(1021.113341894822, 83, 0)
        param.setValueAtTime(1098.888181127504, 84, 0)
        param.setValueAtTime(1202.560762111194, 85, 0)
        param.setValueAtTime(0, 86, 0)
        param.setValueAtTime(0, 87, 0)
        param.setValueAtTime(0, 88, 0)
        param.setValueAtTime(0, 89, 0)
        param.setValueAtTime(0, 90, 0)
        param.setValueAtTime(0, 91, 0)
        param.setValueAtTime(0, 92, 0)
        param.setValueAtTime(0, 93, 0)
        param.setValueAtTime(0, 94, 0)
        param.setValueAtTime(0, 95, 0)
        param.setValueAtTime(0, 96, 0)
        param.setValueAtTime(0, 97, 0)
        param.setValueAtTime(0, 98, 0)
        param.setValueAtTime(0, 99, 0)
        param.setValueAtTime(0, 100, 0)
        param.setValueAtTime(535.8, 51, 1)
        param.setValueAtTime(535.8, 52, 1)
        param.setValueAtTime(535.8, 53, 1)
        param.setValueAtTime(535.8, 54, 1)
        param.setValueAtTime(535.8, 55, 1)
        param.setValueAtTime(535.8, 56, 1)
        param.setValueAtTime(535.8, 57, 1)
        param.setValueAtTime(535.8, 58, 1)
        param.setValueAtTime(535.8, 59, 1)
        param.setValueAtTime(535.8, 60, 1)
        param.setValueAtTime(535.8, 61, 1)
        param.setValueAtTime(535.8, 62, 1)
        param.setValueAtTime(535.8, 63, 1)
        param.setValueAtTime(535.8, 64, 1)
        param.setValueAtTime(535.8, 65, 1)
        param.setValueAtTime(535.8, 66, 1)
        param.setValueAtTime(535.8, 67, 1)
        param.setValueAtTime(535.8, 68, 1)
        param.setValueAtTime(535.8, 69, 1)
        param.setValueAtTime(535.8, 70, 1)
        param.setValueAtTime(535.8, 71, 1)
        param.setValueAtTime(535.8, 72, 1)
        param.setValueAtTime(535.7899312483609, 73, 1)
        param.setValueAtTime(530.8, 74, 1)
        param.setValueAtTime(526.8, 75, 1)
        param.setValueAtTime(520.8, 76, 1)
        param.setValueAtTime(512.8, 77, 1)
        param.setValueAtTime(512.8, 78, 1)
        param.setValueAtTime(511.8, 79, 1)
        param.setValueAtTime(511.8, 80, 1)
        param.setValueAtTime(510.8, 81, 1)
        param.setValueAtTime(510.8, 82, 1)
        param.setValueAtTime(509.8, 83, 1)
        param.setValueAtTime(509.8, 84, 1)
        param.setValueAtTime(666.7, 85, 1)
        param.setValueAtTime(0, 86, 1)
        param.setValueAtTime(0, 87, 1)
        param.setValueAtTime(0, 88, 1)
        param.setValueAtTime(0, 89, 1)
        param.setValueAtTime(0, 90, 1)
        param.setValueAtTime(0, 91, 1)
        param.setValueAtTime(0, 92, 1)
        param.setValueAtTime(0, 93, 1)
        param.setValueAtTime(0, 94, 1)
        param.setValueAtTime(0, 95, 1)
        param.setValueAtTime(0, 96, 1)
        param.setValueAtTime(0, 97, 1)
        param.setValueAtTime(0, 98, 1)
        param.setValueAtTime(0, 99, 1)
        param.setValueAtTime(0, 100, 1)
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValueAtTime(573, 51, 0)
        param.setValueAtTime(573, 52, 0)
        param.setValueAtTime(573, 53, 0)
        param.setValueAtTime(573, 54, 0)
        param.setValueAtTime(573, 55, 0)
        param.setValueAtTime(573, 56, 0)
        param.setValueAtTime(573, 57, 0)
        param.setValueAtTime(573, 58, 0)
        param.setValueAtTime(573, 59, 0)
        param.setValueAtTime(573, 60, 0)
        param.setValueAtTime(573, 61, 0)
        param.setValueAtTime(573, 62, 0)
        param.setValueAtTime(573, 63, 0)
        param.setValueAtTime(573, 64, 0)
        param.setValueAtTime(573, 65, 0)
        param.setValueAtTime(573, 66, 0)
        param.setValueAtTime(573, 67, 0)
        param.setValueAtTime(573, 68, 0)
        param.setValueAtTime(573, 69, 0)
        param.setValueAtTime(573, 70, 0)
        param.setValueAtTime(573, 71, 0)
        param.setValueAtTime(573, 72, 0)
        param.setValueAtTime(573.2283725646498, 73, 0)
        param.setValueAtTime(603.3896871448133, 74, 0)
        param.setValueAtTime(722.8582558596045, 75, 0)
        param.setValueAtTime(912.8779072113034, 76, 0)
        param.setValueAtTime(1135.5881444478, 77, 0)
        param.setValueAtTime(1077.079766592946, 78, 0)
        param.setValueAtTime(1054.131236782807, 79, 0)
        param.setValueAtTime(962.0957367213813, 80, 0)
        param.setValueAtTime(1027.614072581835, 81, 0)
        param.setValueAtTime(756.7708287830778, 82, 0)
        param.setValueAtTime(664.7181116625553, 83, 0)
        param.setValueAtTime(620.6221722621578, 84, 0)
        param.setValueAtTime(304, 85, 0)
        param.setValueAtTime(0, 86, 0)
        param.setValueAtTime(0, 87, 0)
        param.setValueAtTime(0, 88, 0)
        param.setValueAtTime(0, 89, 0)
        param.setValueAtTime(0, 90, 0)
        param.setValueAtTime(0, 91, 0)
        param.setValueAtTime(0, 92, 0)
        param.setValueAtTime(0, 93, 0)
        param.setValueAtTime(0, 94, 0)
        param.setValueAtTime(0, 95, 0)
        param.setValueAtTime(0, 96, 0)
        param.setValueAtTime(0, 97, 0)
        param.setValueAtTime(0, 98, 0)
        param.setValueAtTime(0, 99, 0)
        param.setValueAtTime(0, 100, 0)
        param.setValueAtTime(260.9000000000001, 51, 1)
        param.setValueAtTime(260.9000000000001, 52, 1)
        param.setValueAtTime(260.9000000000001, 53, 1)
        param.setValueAtTime(260.9000000000001, 54, 1)
        param.setValueAtTime(260.9000000000001, 55, 1)
        param.setValueAtTime(260.9000000000001, 56, 1)
        param.setValueAtTime(260.9000000000001, 57, 1)
        param.setValueAtTime(260.9000000000001, 58, 1)
        param.setValueAtTime(260.9000000000001, 59, 1)
        param.setValueAtTime(260.9000000000001, 60, 1)
        param.setValueAtTime(260.9000000000001, 61, 1)
        param.setValueAtTime(260.9000000000001, 62, 1)
        param.setValueAtTime(260.9000000000001, 63, 1)
        param.setValueAtTime(260.9000000000001, 64, 1)
        param.setValueAtTime(260.9000000000001, 65, 1)
        param.setValueAtTime(260.9000000000001, 66, 1)
        param.setValueAtTime(260.9000000000001, 67, 1)
        param.setValueAtTime(260.9000000000001, 68, 1)
        param.setValueAtTime(260.9000000000001, 69, 1)
        param.setValueAtTime(260.9000000000001, 70, 1)
        param.setValueAtTime(260.9000000000001, 71, 1)
        param.setValueAtTime(260.9000000000001, 72, 1)
        param.setValueAtTime(260.9100687516392, 73, 1)
        param.setValueAtTime(265.9000000000001, 74, 1)
        param.setValueAtTime(269.9000000000001, 75, 1)
        param.setValueAtTime(275.9000000000001, 76, 1)
        param.setValueAtTime(287.9000000000001, 77, 1)
        param.setValueAtTime(289.9000000000001, 78, 1)
        param.setValueAtTime(296.9000000000001, 79, 1)
        param.setValueAtTime(304.9000000000001, 80, 1)
        param.setValueAtTime(314.9, 81, 1)
        param.setValueAtTime(295.9, 82, 1)
        param.setValueAtTime(303.9, 83, 1)
        param.setValueAtTime(312.9, 84, 1)
        param.setValueAtTime(150, 85, 1)
        param.setValueAtTime(0, 86, 1)
        param.setValueAtTime(0, 87, 1)
        param.setValueAtTime(0, 88, 1)
        param.setValueAtTime(0, 89, 1)
        param.setValueAtTime(0, 90, 1)
        param.setValueAtTime(0, 91, 1)
        param.setValueAtTime(0, 92, 1)
        param.setValueAtTime(0, 93, 1)
        param.setValueAtTime(0, 94, 1)
        param.setValueAtTime(0, 95, 1)
        param.setValueAtTime(0, 96, 1)
        param.setValueAtTime(0, 97, 1)
        param.setValueAtTime(0, 98, 1)
        param.setValueAtTime(0, 99, 1)
        param.setValueAtTime(0, 100, 1)
        del param

    param = lastNode.getParam("blackOutside")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "crop_time_reverse"

    # Start of node "in_out_switch"
    lastNode = app.createNode("net.sf.openfx.switchPlugin", 1, group)
    lastNode.setScriptName("in_out_switch")
    lastNode.setLabel("in_out_switch")
    lastNode.setPosition(-126, 1439)
    lastNode.setSize(100, 29)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupin_out_switch = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "in_out_switch"

    # Start of node "Dot1"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot1")
    lastNode.setLabel("Dot1")
    lastNode.setPosition(-83, 1081)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot1 = lastNode

    del lastNode
    # End of node "Dot1"

    # Start of node "Dot3"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot3")
    lastNode.setLabel("Dot3")
    lastNode.setPosition(544, 1446)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot3 = lastNode

    del lastNode
    # End of node "Dot3"

    # Start of node "TextFit"
    lastNode = app.createNode("vv.TextFit", 1, group)
    lastNode.setScriptName("TextFit")
    lastNode.setLabel("TextFit")
    lastNode.setPosition(-385, 921)
    lastNode.setSize(100, 32)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupTextFit = lastNode

    param = lastNode.getParam("onParamChanged")
    if param is not None:
        param.setValue("text_fit.main")
        del param


    # Create the user parameters
    lastNode.control = lastNode.createPageParam("control", "Control")
    param = lastNode.createStringParam("state_label", "State")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)
    param.setDefaultValue("- - - - - - - >    STATE :")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    param.setValue("- - - - - - - >    STATE :")
    lastNode.state_label = param
    del param

    param = lastNode.createChoiceParam("format", "Format")
    entries = [ ("Quarter HD - 480 x 270", ""),
    ("Half HD - 960 x 540", ""),
    ("Full HD - 1920 x 1080", ""),
    ("4K - 3840 x 2160", "")]
    param.setOptions(entries)
    del entries
    param.setDefaultValue("Full HD - 1920 x 1080")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.set("Full HD - 1920 x 1080")
    lastNode.format = param
    del param

    param = lastNode.createButtonParam("link", "Link To Parent")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setEvaluateOnChange(False)
    lastNode.link = param
    del param

    param = lastNode.createButtonParam("refresh", "Refresh")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setEvaluateOnChange(False)
    lastNode.refresh = param
    del param

    param = lastNode.createSeparatorParam("sep5", "")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep5 = param
    del param

    param = lastNode.createStringParam("texts_label", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)
    param.setDefaultValue("- - - - - - - >    TEXT :")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    param.setValue("- - - - - - - >    TEXT :")
    lastNode.texts_label = param
    del param

    param = lastNode.createStringParam("title", "Title")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("Title")
    lastNode.title = param
    del param

    param = lastNode.createStringParam("subtitle", "Subtitle")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeDefault)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue("Subtitle")
    lastNode.subtitle = param
    del param

    param = lastNode.createFileParam("font", "Font")
    param.setSequenceEnabled(False)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    param.setValue("")
    lastNode.font = param
    del param

    param = lastNode.createSeparatorParam("sep7", "")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep7 = param
    del param

    param = lastNode.createStringParam("settings_label", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)
    param.setDefaultValue("- - - - - - - >    SETTINGS :")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    param.setValue("- - - - - - - >    SETTINGS :")
    lastNode.settings_label = param
    del param

    param = lastNode.createIntParam("font_size_title", "Title Font Size")
    param.setMinimum(0, 0)
    param.setMaximum(2000, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1000, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(390, 0)
    lastNode.font_size_title = param
    del param

    param = lastNode.createInt2DParam("title_position", "Title Position")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    param.setValue(310, 0)
    param.setValue(519, 1)
    lastNode.title_position = param
    del param

    param = lastNode.createIntParam("font_size_subtitle", "Subtitle Font Size")
    param.setMinimum(0, 0)
    param.setMaximum(2000, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1000, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(360, 0)
    lastNode.font_size_subtitle = param
    del param

    param = lastNode.createInt2DParam("subtitle_position", "Subtitle Position")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    param.setValue(16, 1)
    lastNode.subtitle_position = param
    del param

    param = lastNode.createSeparatorParam("sep4", "")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.sep4 = param
    del param

    param = lastNode.createChoiceParam("align", "Text Align")
    entries = [ ("Right", ""),
    ("Left", ""),
    ("Center", "")]
    param.setOptions(entries)
    del entries
    param.setDefaultValue("Center")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.align = param
    del param

    param = lastNode.createButtonParam("separate_text", "Separate Text")

    # Add the param to the page
    lastNode.control.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    lastNode.separate_text = param
    del param

    lastNode.exp = lastNode.createPageParam("exp", "Exp")
    param = lastNode.createInt2DParam("current_format", "Current Format")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0, 0)
    param.restoreDefaultValue(0)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(100, 1)
    param.setDefaultValue(0, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.exp.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1920, 0)
    param.setValue(1080, 1)
    lastNode.current_format = param
    del param

    param = lastNode.createDoubleParam("rscale", "Rscale")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)

    # Add the param to the page
    lastNode.exp.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(1, 0)
    lastNode.rscale = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['control', 'exp', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "TextFit"

    # Start of node "origina_input_transform"
    lastNode = app.createNode("net.sf.openfx.TransformPlugin", 1, group)
    lastNode.setScriptName("origina_input_transform")
    lastNode.setLabel("origina_input_transform")
    lastNode.setPosition(-385, 731)
    lastNode.setSize(100, 45)
    lastNode.setColor(0.7, 0.3, 0.1)
    grouporigina_input_transform = lastNode

    param = lastNode.getParam("scale")
    if param is not None:
        param.setValue(0.3, 0)
        param.setValue(0.3, 1)
        del param

    param = lastNode.getParam("transformCenterChanged")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "origina_input_transform"

    # Now that all nodes are created we can connect them together, restore expressions
    groupOutput1.connectInput(0, groupin_out_switch)
    groupMerge2.connectInput(0, groupletter_transform_subtitle)
    groupMerge2.connectInput(1, groupletter_transform_title)
    groupMerge4.connectInput(0, groupreformat)
    groupMerge4.connectInput(1, groupMerge2)
    groupFrameRange.connectInput(0, groupMerge4)
    grouptime_reverse.connectInput(0, groupFrameRange)
    groupswitch_time_reverse.connectInput(0, groupFrameRange)
    groupswitch_time_reverse.connectInput(1, groupcrop_time_reverse)
    groupcrop_time_reverse.connectInput(0, grouptime_reverse)
    groupin_out_switch.connectInput(0, groupDot1)
    groupin_out_switch.connectInput(1, groupswitch_time_reverse)
    groupin_out_switch.connectInput(2, groupDot3)
    groupDot1.connectInput(0, groupFrameRange)
    groupDot3.connectInput(0, groupcrop_time_reverse)
    groupTextFit.connectInput(0, grouporigina_input_transform)

    param = groupTextFit.getParam("state_label")
    param.setExpression("thisGroup.state_label.get()", False, 0)
    del param
    param = groupTextFit.getParam("format")
    param.setExpression("thisGroup.format.get()", False, 0)
    del param
    param = groupTextFit.getParam("texts_label")
    param.setExpression("thisGroup.texts_label.get()", False, 0)
    del param
    param = groupTextFit.getParam("title")
    param.setExpression("thisGroup.title.get()", False, 0)
    del param
    param = groupTextFit.getParam("subtitle")
    param.setExpression("thisGroup.subtitle.get()", False, 0)
    del param
    param = groupTextFit.getParam("font")
    param.setExpression("thisGroup.font.get()", False, 0)
    del param
    param = groupTextFit.getParam("settings_label")
    param.setExpression("thisGroup.settings_label.get()", False, 0)
    del param
    param = groupTextFit.getParam("current_format")
    param.setExpression("index = thisNode.format.get()\nret = general.formats[index][dimension]", True, 0)
    param.setExpression("index = thisNode.format.get()\nret = general.formats[index][dimension]", True, 1)
    del param
    param = groupTextFit.getParam("rscale")
    param.setExpression("index = thisNode.format.get()\nret = general.rscale[index]", True, 0)
    del param

    try:
        extModule = sys.modules["LetterAnimationExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
